import sys
"""
Better way 1장부터 3장까지 중요하다고 생각되는 부분을 가져왔습니다.
더 많은데 한계가 있네요 ㅠㅠ 죄송합니다.

"""


# 1장. 커맨드 라인 옵션에 대해 알자.

"""
제가 이 장에서 집중한 건 커맨드(터미널) 창에서 옵션이 들어갈 수 있다는 것입니다.
python --version 을 통해 버젼을 확인할 수 있었는데요.
이 외에도 다른 옵션들이 들어갈 수 있습니다. 굉장히 많은데

python -c "print('hi')"와 같이 파이썬을 단 한 줄만 실행시키는 '-c'
python -q 와 같이 요란하게 파이썬 인터프리터를 시작 안하는 '-q'
python -v 와 같이 시작부터 끝까지 인터프리터 전 과정을 출력하는 '-v' (verbose)

이 정도만 알고 나머지는 도저히 모르겠습니다...

"python -h"를 통해 나오는 것을 같이 알아보면 좋겠습니다.



저는 sys.argv를 소개하겠습니다.
"""

"""
sys.argv는 sys 모듈 안에 있는 argv 라는 변수입니다. sys모듈은 시스템의 약자로
파이썬 인터프리터와 관련된 설정을 다룰 수 있습니다.
여기서 argv란 무엇이냐. 파이썬 인터프리터를 커맨드나 터미널로 실행할 때 입력값으로 넣어준 것이
여기에 들어갑니다. '난 그런 것을 집어넣어본  적이 없어!'라고 말하실 수 있습니다.
맞습니다. python을 실행시켜 'import sys; sys.argv[0]'라고 명령을 치시면 '', 빈 문자열이 나옵니다.
이 상태는 단순히 파이썬 인터프리터가 실행된 상태라는거죠.

"""


"""
이와는 대조적으로,
어떤 변태들은 터미널에서 이런 것도 해보셨을텝니다. 'python foryou.py'
이렇게 하면 경로만 맞다면 foryou.py가 실행이 되죠.
이떄 만약 파일 안에 'import sys; sys.argv[0]'를 출력해보시면
foryou.py 자신이 나옵니다. 이 파일이 실행된다는 뜻이구요. argv는 리스트로
첫 번째(index = 0)의 값은 무조건 가지고 있습니다.
"""
if __name__ == "__main__":
    print('*' * 120+"\nsys.argv[0]의 값은 {0}입니다. ^^\n".format(sys.argv[0])+'*'*120)
    print('\n')

"""
터미널이나 커맨드를 이용하시면 옵션을 많이 넣어보셨을겁니다.
마찬가지죠. python을 실행할 때도 실행할 파일과 함께 많은 것을 넣을 수 있습니다.

'python foryou.py 12345'와 같이 입력해본다고 하면

foryou.py가 실행되며 12345라는 입력값이 실행되는 것입니다.
이 안에는 무엇이 벌어지고 있느냐!
sys.argv[0] = foryou.py, sys.argv[1] = 12345가 됩니다.
sys.argv[1]을 사용해 연산을 할 수 있다는 말이 됩니다.

"""



"""
저는 이렇게 사용해보겠습니다.
저는 저만의 야구동영상 파일을 관리하는 py 파일을 가지고 있고 비밀번호를 입력해서 맞아야만
그 파일이 실행됩니다. 그 비밀번호는 123456이 됩니다. 실행하는 사람이 비밀번호를 처음에 제대로 입력해야 하는 것이죠.
python baseball.py 123456과 같이 말이죠.
밑에는 그 코드를 짜보겠습니다.
"""


if __name__ == '__main__':
    entry_permit = 0
    while True:
        if sys.argv[1] == 123456:
            print("환영합니다.")
            break
        else:
            sys.argv[1] == int(input("비밀번호를 똑바로 입력해주십시요 : " if entry_permit != 2 else "마지막입니다."))
            entry_permit += 1
            if entry_permit == 2:
                print("야구를 보실 수 없습니다. 종료합니다.")
                sys.exit()

"""
이것을 실행해보시면 비밀번호를 옳게 입력하면 야구를 볼 수 없고
3번 이상 틀리면 프로그램이 종료됩니다.

sys.argv를 이런 식으로 사용해볼 수도 있겠습니다.
더 다양한 예는 무엇이 있을지요?
"""



"""
string, bytes는 예를 하나만 보겠습니다.

터미널 창에
    python -c "from urllib import request; print(request.urlopen('http://www.naver.com').read())"
복붙 ㄱㄱ ↑
-c 옵션이 가지는 힘은 이렇게 드러납니다. -c에는 한 줄만 입력할 수 있는데 ';'를 통해서면 여러 줄을 한 줄로 연결할
수 있습니다. 저 식은 urllib이라는 웹 url 다루는 패지키에서 request 모듈을 임포트 한뒤, 네이버 html 페이지를 읽어
출력하는 코드입니다. urllib은 저도 딱 저 정도만 할 수 있습니다. 나머지는 장고 시간에...


결과를 보시면 아마 한 글자도 이해 못하실 겁니다.
    python -c "from urllib import request; print(request.urlopen('http://www.naver.com').read().decode())"
이렇게 하시면 한글은 보이실거에요. 이렇게 바이트로 리드된 것을 str로 디코드 할 수 있습니다.
(네이버 겁나 깁니다...)
"""
