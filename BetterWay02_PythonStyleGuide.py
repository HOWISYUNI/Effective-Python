import sys

# 18쪽. PEP 8 스타일 가이드를 따르자.
# 2016년 9월 2일 완성.

"""
  PEP(Python Enhancement Proposal), 다른 말로 파이썬 개선 제안서는 파이썬 코드를 어떻게 구성할지 알려주는 스타일 가이드.
Syntax만 지킨다면 코드를 짜는 것은 개발자 본인 마음대로이지만 개발에서 협엽이 필수로 자리잡고 있는 요즈음,
모두에게 일반적으로 통용되는 방식으로 코드를 짜는 것이 효율적이다. 그런 의미에서
PEP는 어떤 식으로 코드를 짜야 할지를 제안하는 역할을 한다.
https://www.python.org/dev/peps/pep-0008/
 ↑ 여기에 매우 많은 내용이 있다. 그러나 현실적으로 모두 읽기는 힘들고, 책에 소개된 내용 중
 정말 중요하다고 생각되는 것들을 하나씩 정리하고자 한다.
"""


"""
공백(whitespace)
 1. 탭이 아닌 스페이스로 들여쓴다. 파이참 같은 IDE는 탭을 입력해도 SPACE로 변환하도록 디폴트 설정되어 있다.
 2. 문법적으로 의미 있는 들여쓰기는 각 수준마다 스페이스 4개를 사용한다.
 3. 표현식이 길어서 다음 줄로 이어지면 일반적인 들여쓰기 수준에 추가로 스페이스 4개를 더 들여쓴다.
 4. 파일에서 함수와 클래스는 빈 줄 두 개로 구분해야 한다.
 5. 클래스에서 메서드는 빈 줄 하나로 구분해야 한다.
"""


"""
명명(naming)
 1. 함수, 변수, 속성은 lowercase_underscore 형식을 지킨다.
 2. 보호(protected) 인스턴스 속성은 _leading_underscore 형식을 지킨다.
 3. 비공개(private) 인스턴스 속성은 __double_leading_underscore 형식을 지킨다.
 4. 클래스와 예외는 CapitalizedWord 형식을 지킨다.
 5. 모듈 수준 상수는 ALL_CAPS 형식을 따른다.
 6. 클래스의 인스턴스 메소드의 첫 번째 파라미터는 'self'로 한다.
 7. 클래스 메서드에서는 첫 번째 파라미터는 'cls'로 한다.
"""


"""
표현식과 문장
 1. 긍정 표현식의 무정(if not a is b)대신에 인라인 부정(if a is not b)을 사용한다.
 2. 빈 값을 확인할 때 길이를 비교하는 형식(if len(somelist) == 0)이 아닌
    if not somelist를 사용하자. 파이썬은 조건식에서 빈 문자열, 리스트는 False로 처리한다.
 3. 항상 파일의 맨 앞에 import 문을 놓는다.
 4. 임포트는 '표준 라이브러리의 모듈, 서드파티 모듈, 자신이 만든 모듈' 섹션 순으로 구분해야 한다.
    각각의 하위 섹션에서는 알파벳 순서로 임포트한다.
"""



# 위 내용들은 경우에 따라 책의 내용을 조금 생략하기도 했다.
# 그러니 더 많은 정보를 원할 경우 문의하거나, 직접 사이트를 방문하기 바란다.
